% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/process_run.R
\name{process_run}
\alias{process_run}
\title{Fast run}
\usage{
process_run(
  reads_1,
  reads_2,
  sample_manifest,
  marker_info,
  run_dir,
  n_sample = 10000,
  min_read_count = 1000,
  min_marker_count = 100,
  min_asv_count = 5,
  min_asv_freq = 0.001,
  min_ident = 0.75,
  min_ident_z = -3,
  max_breakpoints = 3L,
  min_parent_ratio = 1.5,
  primer_max_mismatch = 0L,
  min_overlap = 10L,
  marker_trim = NULL,
  max_marker_miss = 0.5,
  max_sm_miss = 0.5,
  min_homo_rep = 3,
  terminal_region_len = 1,
  sample_med_He = 0,
  n_alleles = 3,
  var_maf = 0.001,
  var_he = 0.001
)
}
\arguments{
\item{reads_1}{(Required). The file path to the forward fastq file from paired-end sequence data. Compressed file formats such as .fastq.gz are supported.}

\item{reads_2}{(Required). The file path to the reverse fastq file from paired-end sequence data corresponding to those provided to the reads_1 argument. Compressed file formats such as .fastq.gz are supported.}

\item{sample_manifest}{(Required). The sample barcodes file. The file should include sample_id, barcode_fwd, barcode_rev, sample (sample name, can be the same as sample_id), info (e.g., sample type).}

\item{marker_info}{(Required). The target amplicon file. The file should include marker_id, primer_fwd, primer_rev, seq (reference sequence), chrom (chromosome), start (reference sequence start position), end (reference sequence end position).}

\item{run_dir}{(Required). The path to the output file.}

\item{n_sample}{(Optional). Default 10000. Downsamples an exact number of reads from paired-end fastq files.}

\item{min_read_count}{(Optional). Default 1000. The minimum number of reads per sample per marker.}

\item{min_marker_count}{(Optional). Default 100. The minimum number of reads for each amplicon marker after calling haplotype.}

\item{min_asv_count}{(Optional). Default 5. The minimum number of reads for each haplotype.}

\item{min_asv_freq}{(Optional). Default 0.001. The minimum haplotype frequency.}

\item{min_ident}{(Optional). Default 0.75. The minimum sequence similarity.}

\item{min_ident_z}{(Optional). Default -3. The minimum standardized sequence similarity.}

\item{max_breakpoints}{(Optional). Default 3. The maximum number of breakpoints chimera reads.}

\item{min_parent_ratio}{(Optional). Default 1.5. The minimum ratio that the sequences greater than this value are more abundant than a sequence can be its "parents".}

\item{primer_max_mismatch}{(Optional). Default 3. The maximum number of mismatches of the amplicon primer sequence.}

\item{min_overlap}{(Optional). Default 10. The minimum length of the overlap required for merging the forward and reverse reads.}

\item{marker_trim}{(Optional). Default NULL. Data frame with three columns marker_id (character), trim_fwd (integer), and trim_rev (integer).}

\item{max_marker_miss}{(Optional). Default 0.5. The maximum fraction of missing data for amplicon markers.}

\item{max_sm_miss}{(Optional). Default 0.5. The maximum fraction of missing data for samples.}

\item{min_homo_rep}{(Optional). Default 3 (numeric vector). The minimum length of the homopolymer repeats.}

\item{terminal_region_len}{(Optional). Default 1 (numeric vector between 1 and 3). The terminal indel position.}

\item{sample_med_He}{(Optional). Default 0. The maximum median expected heterozygosity (a measure of genetic variation within populations) for the variance of all samples in the dataset.}

\item{n_alleles}{(Optional). Default 3. The maximum number of alleles at a locus.}

\item{var_maf}{(Optional). Default 0.001. The minimum minor allele frequency of the variant.}

\item{var_he}{(Optional). Default 0.001. The minimum expected heterozygosity of the variant.}
}
\value{
High-level wrapper for all functions, can easily get all the results
}
\description{
High-level wrapper for all functions, can easily get all the results
}
\examples{
example_data <- get_ampseqr_example_data()
reads_1 <- example_data$reads_1
reads_2 <- example_data$reads_2
sample_manifest <- example_data$sample_manifest
marker_info <- example_data$marker_info

process_run_dir <- "runs_process"
dir.create("./runs_process")

process_run(
  reads_1 = reads_1,
  reads_2 = reads_2,
  sample_manifest = sample_manifest,
  marker_info = marker_info,
  run_dir = process_run_dir
)

}
